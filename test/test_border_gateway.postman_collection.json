{
	"info": {
		"_postman_id": "68fc1a13-a2be-4145-adc4-6088fe7b2fe1",
		"name": "test_border_gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "auth-service password / linksmart / realm2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ed4745e-a6d7-4513-b843-93ba73027ab0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"isAuthorized\", function () {",
							"    pm.expect(jsonData.isAuthorized).to.eql(true);",
							"});",
							"pm.test(\"authUrl is not present\", function () {",
							"    pm.expect(jsonData.authUrl).to.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"rule\": \"MQTT/#\",\n    \"openidConnectProviderName\": \"linksmart\"\n}"
				},
				"url": {
					"raw": "{{url}}/auth/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"authorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth-service password / linksmart / realm2 no body",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ed4745e-a6d7-4513-b843-93ba73027ab0",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"    var jsonData = pm.response.json();",
							"pm.test(\"isAuthorized\", function () {",
							"    pm.expect(jsonData.isAuthorized).to.eql(false);",
							"});",
							"pm.test(\"error\", function () {",
							"    pm.expect(jsonData.error).to.eql(\"no rule string given\");",
							"});",
							"pm.test(\"authUrl is not present\", function () {",
							"    pm.expect(jsonData.authUrl).to.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/auth/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"authorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth-service password / anonymous / realm2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ed4745e-a6d7-4513-b843-93ba73027ab0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"isAuthorized\", function () {",
							"    pm.expect(jsonData.isAuthorized).to.eql(false);",
							"});",
							"pm.test(\"error\", function () {",
							"    pm.expect(jsonData.error).to.eql(\"Forbidden\");",
							"});",
							"pm.test(\"authUrl is present\", function () {",
							"    pm.expect(jsonData.authUrl).not.to.eql(undefined);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"rule\": \"HTTP/GET/dummy-domain/443/dummy-path\",\n    \"openidConnectProviderName\": \"linksmart\"\n}"
				},
				"url": {
					"raw": "{{url}}/auth/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"authorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve access_token for linksmart / realm2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3acee57d-9db4-45ef-afd7-377b61edd85e",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"let json = pm.response.json();",
							"pm.environment.set('linksmart_access_token', json.access_token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{realm2_client_secret}}",
							"type": "text"
						},
						{
							"key": "audience",
							"value": "{{audience}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{realm2_token_endpoint}}",
					"host": [
						"{{realm2_token_endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth-service access_token / linksmart / realm2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ed4745e-a6d7-4513-b843-93ba73027ab0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"isAuthorized\", function () {",
							"    pm.expect(jsonData.isAuthorized).to.eql(true);",
							"});",
							"pm.test(\"authUrl is not present\", function () {",
							"    pm.expect(jsonData.authUrl).to.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{linksmart_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"rule\": \"MQTT/#\",\n    \"openidConnectProviderName\": \"linksmart\"\n}"
				},
				"url": {
					"raw": "{{url}}/auth/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"authorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "auth-service wrong access_token / linksmart / realm2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3ed4745e-a6d7-4513-b843-93ba73027ab0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var jsonData = pm.response.json();",
							"pm.test(\"isAuthorized\", function () {",
							"    pm.expect(jsonData.isAuthorized).to.eql(false);",
							"});",
							"pm.test(\"error\", function () {",
							"    pm.expect(jsonData.error).to.eql(\"Access token is invalid, error = JsonWebTokenError, invalid token\");",
							"});",
							"pm.test(\"authUrl is not present\", function () {",
							"    pm.expect(jsonData.authUrl).to.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "123{{linksmart_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"rule\": \"MQTT/#\",\n    \"openidConnectProviderName\": \"linksmart\"\n}"
				},
				"url": {
					"raw": "{{url}}/auth/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"authorize"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc GET anonymous",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/sc",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc DELETE anonymous",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//pm.test(\"error\", function () {",
							"//    var jsonData = pm.response.json();",
							"//    pm.expect(jsonData.error).to.eql(\"Forbidden\");",
							"//});",
							"const $ = cheerio.load(pm.response.text())",
							"",
							"pm.test(\"it should return a title\", () => { ",
							"    pm.expect($('title').text()).to.not.be.empty ",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/sc",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc GET wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"//pm.test(\"error\", function () {",
							"//    var jsonData = pm.response.json();",
							"//    pm.expect(jsonData.error).to.eql(\"Unauthorized\");",
							"//});",
							"const $ = cheerio.load(pm.response.text())",
							"",
							"pm.test(\"it should return a title\", () => { ",
							"    pm.expect($('title').text()).to.not.be.empty ",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "wrong",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/sc",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc DELETE password / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc PUT password / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"jannis-linksmart-agent\",\n    \"name\": \"_linksmart-la.tcp_\",\n    \"description\": \"The instantiation of an LinkSmart(R) IoT Agent. A service for Stream Mining and Machine Learning management.\",\n    \"meta\": {},\n    \"apis\": {\n        \"Agent MQTT API\": \"tcp://{{domain}}:1883\",\n        \"Agent RESTful API\": \"http://imagon:8319/\",\n        \"sc\": \"http://sc:8082\",\n        \"api1\": \"https://demo.linksmart.eu/api\",\n        \"api2\": \"http://demo.test.eu:8080\",\n        \"some_service\": \"http://some_service:8081\"\n    },\n    \"docs\": [\n        {\n            \"description\": \"Open API V2\",\n            \"apis\": [\n                \"Agent RESTful API\"\n            ],\n            \"type\": \"application/json\",\n            \"url\": \"http://imagon:8319/swagger-ui.html\"\n        }\n    ],\n    \"ttl\": 86400\n}"
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc GET anonymous / test translation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body matches translated encoded http address\", function () {",
							"    let expected = pm.iterationData.get(\"expectedTranslatedHttpAddress\")+\"/aHR0cDovL2ltYWdvbjo4MzE5/swagger-ui.html\";",
							"    pm.expect(pm.response.text()).to.include(expected);",
							"});",
							"pm.test(\"Body matches translated unencoded http address\", function () {",
							"    let expected = pm.iterationData.get(\"expectedTranslatedHttpAddress\")+\"/sc\";",
							"    pm.expect(pm.response.text()).to.include(expected);",
							"});",
							"pm.test(\"Body matches translated tcp address\", function () {",
							"    let expected = pm.iterationData.get(\"expectedTranslatedMqttAddress\");",
							"    pm.expect(pm.response.text()).to.include(expected);",
							"});",
							"pm.test(\"Body matches whitelisted address\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"http://demo.test.eu:8080\");",
							"});",
							"pm.test(\"Body matches address whitelisted with wildcard\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"https://demo.linksmart.eu/api\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/sc",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc POST password / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"pm.test(\"error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Forbidden\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"_linksmart-gost.tcp_\",\n    \"description\": \"GOST API\",\n    \"meta\": {},\n    \"ttl\": 86400,\n    \"apis\": {\n        \"v1.0\": \"http://192.168.99.100:8080/v1.0/\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/sc",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc DELETE password / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc PUT password in query parameter / linksmart ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"jannis-linksmart-agent\",\n    \"name\": \"_linksmart-la.tcp_\",\n    \"description\": \"The instantiation of an LinkSmart(R) IoT Agent. A service for Stream Mining and Machine Learning management.\",\n    \"meta\": {},\n    \"apis\": {\n        \"Agent MQTT API\": \"tcp://{{domain}}:1883\",\n        \"Agent RESTful API\": \"http://imagon:8319/\",\n        \"sc\": \"http://sc:8082\",\n        \"api1\": \"https://demo.linksmart.eu/api\",\n        \"api2\": \"http://demo.test.eu:8080\",\n        \"some_service\": \"http://some_service:8081\"\n    },\n    \"docs\": [\n        {\n            \"description\": \"Open API V2\",\n            \"apis\": [\n                \"Agent RESTful API\"\n            ],\n            \"type\": \"application/json\",\n            \"url\": \"http://imagon:8319/swagger-ui.html\"\n        }\n    ],\n    \"ttl\": 86400\n}"
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent?username={{username}}&password={{password}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "sc DELETE password in query parameter / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent?username={{username}}&password={{password}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Retrieve access_token for linksmart / realm1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3acee57d-9db4-45ef-afd7-377b61edd85e",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"let json = pm.response.json();",
							"pm.environment.set('default_access_token', json.access_token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "openid",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{realm1_client_secret}}",
							"type": "text"
						},
						{
							"key": "audience",
							"value": "{{audience}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{realm1_token_endpoint}}",
					"host": [
						"{{realm1_token_endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc PUT wrong access_token / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"error\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.error).to.eql(\"Access token is invalid, error = JsonWebTokenError, invalid token\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "123{{default_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"_linksmart-gost.tcp_\",\n    \"description\": \"GOST API\",\n    \"meta\": {},\n    \"ttl\": 86400,\n    \"apis\": {\n        \"v1.0\": \"http://192.168.99.100:8080/v1.0/\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc PUT access_token / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{default_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"_linksmart-gost.tcp_\",\n    \"description\": \"GOST API\",\n    \"meta\": {},\n    \"ttl\": 86400,\n    \"apis\": {\n        \"v1.0\": \"http://192.168.99.100:8080/v1.0/\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc DELETE access_token / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{default_access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					]
				}
			},
			"response": []
		},
		{
			"name": "sc PUT access_token in query parameter / linksmart ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"_linksmart-gost.tcp_\",\n    \"description\": \"GOST API\",\n    \"meta\": {},\n    \"ttl\": 86400,\n    \"apis\": {\n        \"v1.0\": \"http://192.168.99.100:8080/v1.0/\"\n    }\n}"
				},
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent?username={{default_access_token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					],
					"query": [
						{
							"key": "username",
							"value": "{{default_access_token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "sc DELETE access_token in query parameter / linksmart",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a8ada4fd-da90-47e3-b27e-3b7991f06f9b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/sc/jannis-linksmart-agent?username={{default_access_token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"sc",
						"jannis-linksmart-agent"
					],
					"query": [
						{
							"key": "username",
							"value": "{{default_access_token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "c63c7c9f-9130-4261-9fc0-9210fec49f46",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "380448ac-0ecf-47f7-98e2-afc0b15861aa",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}