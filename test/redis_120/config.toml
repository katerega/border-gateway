[external-interface]
tls_key = "/bgw/certs/bgw-ssl_sec_key_wo_pass.pem"
tls_cert = "/bgw/certs/bgw-ssl.pem"

[mqtt-proxy]
authorize_response = true

  [mqtt-proxy.broker]
  address = "mosquitto"
  port = 1883
  username = ""
  password = ""
  tls = false
  tls_ca = ""
  tls_client_key = ""
  tls_client_cert = ""

[http-proxy]
# enableDistributedTracing = true
configurationService = "http://localhost:5056"
redis_host = "redis"

  [http-proxy.domains]

    [http-proxy.domains."bgw-ssl"]

      [http-proxy.domains."bgw-ssl".sc]
      local_address = "http://sc:8082"

        [http-proxy.domains."bgw-ssl".sc.translate_local_addresses]
        whitelist = [
          "*.linksmart.eu",
          "demo.test.eu:8080"
        ]

      [http-proxy.domains."bgw-ssl".auth]
      local_address = "http://localhost:5053"
      no_auth = true
      keep_authorization_header = true

      [http-proxy.domains."bgw-ssl".configuration]
      local_address = "http://localhost:5056"

[websocket-proxy]
  ws_upstream_base_url = "ws://websocket-test:8010/"
  issuer = "https://openid-ssl/auth/realms/realm1"
  audience = ["bgw_client","gui"]
  client_id = "bgw_client"
  realm_public_key_modulus = "wFjJA3wxFfCydn1SXzY5RjapY_fd5oulmwCNDvTSF3RxpUX8itzKm8ksarnFJZtZT3XwNMEkqNiO26HH_OgHWq3Ri6_WrufGyRT_rYgcNxOrL2ZxCTkh0fq4R8VL7CJxaBe1bydwYG5uEMqKkzCCfMM0b0ZbcwzQ5ngdjugO7xYT3IZhBe6xQgTf4FX7QB562J4IRr9D3nX445ah452TcHV05sOIjo6O6z5pgcx68qIO1Nv3pHCP0zztL5vxegw9BiL6bTIsgpfyImM9DhumuIeqev9y8Za5WmUdGc8bSpl6yOGMZYHcaQqNsiaLFWvcjm5CrplWUIIZ9xqjI08rIQ"
  realm_public_key_exponent = "AQAB"

[configuration-service]
# enableDistributedTracing = true

[auth-service]
# enableDistributedTracing = true
openidCA = "/bgw/certs/CA.pem"
redis_expiration = 120
redis_host = "redis"

  [auth-service.openid_connect_providers]

    [auth-service.openid_connect_providers.default]
    anonymous_bgw_rules = "HTTPS/GET/bgw-ssl/+/sc/# HTTPS/GET/bgw-ssl/+/sc1/# HTTPS/GET/bgw-ssl/+/sc2/# HTTPS/GET/bgw-ssl/+/configuration/locations/#"
    issuer = "https://openid-ssl/auth/realms/realm1"
    authorization_endpoint = "https://openid-ssl/auth/realms/realm1/protocol/openid-connect/auth"
    token_endpoint = "https://openid-ssl/auth/realms/realm1/protocol/openid-connect/token"
    audience = ["bgw_client","gui"]
    client_id = "bgw_client"
    jwks_uri = "https://openid-ssl/auth/realms/realm1/protocol/openid-connect/certs"
    realm_public_key_modulus = "wFjJA3wxFfCydn1SXzY5RjapY_fd5oulmwCNDvTSF3RxpUX8itzKm8ksarnFJZtZT3XwNMEkqNiO26HH_OgHWq3Ri6_WrufGyRT_rYgcNxOrL2ZxCTkh0fq4R8VL7CJxaBe1bydwYG5uEMqKkzCCfMM0b0ZbcwzQ5ngdjugO7xYT3IZhBe6xQgTf4FX7QB562J4IRr9D3nX445ah452TcHV05sOIjo6O6z5pgcx68qIO1Nv3pHCP0zztL5vxegw9BiL6bTIsgpfyImM9DhumuIeqev9y8Za5WmUdGc8bSpl6yOGMZYHcaQqNsiaLFWvcjm5CrplWUIIZ9xqjI08rIQ"
    realm_public_key_exponent = "AQAB"
    redirect_uri = "https://bgw-ssl:443/callback"

    [auth-service.openid_connect_providers.linksmart]
    anonymous_bgw_rules = "HTTPS/GET/#"
    issuer = "https://openid-ssl/auth/realms/realm2"
    authorization_endpoint = "https://openid-ssl/auth/realms/realm2/protocol/openid-connect/auth"
    token_endpoint = "https://openid-ssl/auth/realms/realm2/protocol/openid-connect/token"
    audience = ["bgw_client","gui"]
    client_id = "bgw_client"
    jwks_uri = "https://openid-ssl/auth/realms/realm2/protocol/openid-connect/certs"
    realm_public_key_modulus = "-GUSMQBIkFZ6NnRwIVsRYZJri22mpAwrd2JtXosreyvhMc-o2h6W499NgFxifXZPjr6TA5WsAY7G3B5nxhl6kuegm2T4JksZtAq4Qkdlqp9QcVFM1LR5chJ2mAjXwOkUpAOBddSpngXDO1QbivNGrQxhPcy5fvGs0Ql6CYblujZ8VJ3KeOLeSWFBOAiRhvnyEbGYS0pN-2UJ6fJuYIzjbkz9RkN39ez4PPlfeq65kIxMctoMvoNp2rI3XqlJjdQsX4GxBoa8J2nJckcS1awXZhLzkt3LEfcWgVwhW8HJmpSJp4tQBZBGE2yMJT_V_AFICU-DFRcxRSpBx9O-n6DZbw"
    realm_public_key_exponent = "AQAB"
